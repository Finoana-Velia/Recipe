package com.example.Finoana.Controller;

import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.example.Finoana.Core.ErrorResponse;
import com.example.Finoana.Core.ErrorType;
import com.example.Finoana.Exception.DuplicateEntryException;
import com.example.Finoana.Exception.ResourceNotFoundException;

@RestControllerAdvice
public class ResponseControllerAdvice {

	@ExceptionHandler(ResourceNotFoundException.class)
	public ResponseEntity<ErrorResponse> resourceNotFound(ResourceNotFoundException exception){
		Map<String , String> errorMessage = new HashMap<>();
		errorMessage.put("error", exception.getMessage());
		
		ErrorResponse errorResponse = ErrorResponse.builder()
				.statusCode(404)
				.errorType(ErrorType.RESOURCE_NOT_FOUND)
				.details(errorMessage)
				.suggestion("Please make sure that all informations that you have entered are corrects!")
				.timeStamp(LocalDateTime.now())
				.build();
		return ResponseEntity.status(HttpStatus.NOT_FOUND)
				.body(errorResponse);
	}
	
	@ExceptionHandler(DuplicateEntryException.class)
	public ResponseEntity<ErrorResponse> resourceAlreadyExists(DuplicateEntryException exception){
		Map<String, String> errorMessage = new HashMap<>();
		errorMessage.put("error", exception.getMessage());
		
		ErrorResponse response = ErrorResponse.builder()
				.statusCode(400)
				.errorType(ErrorType.RESOURCE_ALREADY_EXISTS)
				.details(errorMessage)
				.suggestion("Resource already exists, please use other informations")
				.timeStamp(LocalDateTime.now())
				.build();
		return ResponseEntity.status(HttpStatus.BAD_REQUEST)
				.body(response);
	}
	
	@ExceptionHandler(ConstraintViolationException.class)
	public ResponseEntity<ErrorResponse> inputValidationException(ConstraintViolationException exception){
		
	}
}
